version: "2.4"

services:

  traefik:
    image: traefik:v2.0
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/acme.json:/acme.json
    environment:
      - "TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL"

  frontend:
    build:
      context: ./
      dockerfile: containers/frontend/Dockerfile
      args:
        VUE_APP_API_ROOT:
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-http.entrypoints=http"
      - "traefik.http.routers.frontend-http.rule=Host(`${FRONTEND_HOSTNAME}`)"
      - "traefik.http.routers.frontend-http.middlewares=frontend-redirect@docker"
      - "traefik.http.middlewares.frontend-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.frontend-https.entrypoints=https"
      - "traefik.http.routers.frontend-https.rule=Host(`${FRONTEND_HOSTNAME}`)"
      - "traefik.http.routers.frontend-https.tls.certResolver=letsencrypt"
      - "traefik.http.services.frontend-https.loadbalancer.server.port=80"

  backend:
    build:
      context: ./
      dockerfile: containers/python/Dockerfile
      args:
        MODULE: backend
    restart: always
    environment:
      - "HUTBEE_PRODUCTION=true"
      - "CONTROLLER_HOSTNAME"
      - "MONGO_DB_NAME"
      - "MONGO_HOST"
      - "MONGO_PORT"
      - "MONGO_PASSWORD"
      - "MONGO_USERNAME"
      - "JWT_SECRET_KEY"
      - "TELEGRAM_BOT_TOKEN"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-http.entrypoints=http"
      - "traefik.http.routers.backend-http.rule=Host(`${BACKEND_HOSTNAME}`)"
      - "traefik.http.routers.backend-http.middlewares=backend-redirect@docker"
      - "traefik.http.middlewares.backend-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.backend-https.entrypoints=https"
      - "traefik.http.routers.backend-https.rule=Host(`${BACKEND_HOSTNAME}`)"
      - "traefik.http.routers.backend-https.tls.certResolver=letsencrypt"
      - "traefik.http.services.backend-https.loadbalancer.server.port=80"

  endpoint:
    build:
      context: ./
      dockerfile: containers/endpoint/Dockerfile
    restart: always
    ports:
      - "${ENDPOINT_SSH_PORT}:22"
      - "${CONTROLLER_REMOTE_SSH_PORT}:10022"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.endpoint-http.entrypoints=http"
      - "traefik.http.routers.endpoint-http.rule=Host(`${CONTROLLER_HOSTNAME}`)"
      - "traefik.http.routers.endpoint-http.middlewares=endpoint-redirect@docker"
      - "traefik.http.middlewares.endpoint-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.endpoint-https.entrypoints=https"
      - "traefik.http.routers.endpoint-https.rule=Host(`${CONTROLLER_HOSTNAME}`)"
      - "traefik.http.routers.endpoint-https.tls.certResolver=letsencrypt"
      - "traefik.http.services.endpoint-https.loadbalancer.server.port=8000"

  db:
    image: mongo:4
    restart: always
    volumes:
      - mongo-db:/data/db
      - mongo-configdb:/data/configdb
    environment:
      - "MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}"
      - "MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}"
    mem_limit: 1g
    mem_reservation: 1g
    command: "--wiredTigerCacheSizeGB 1.0"


volumes:
  mongo-db:
  mongo-configdb:
